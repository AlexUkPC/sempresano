
{% if section.settings.hide_section == false %}



{% if section.settings.parallax %}
	{% if section.settings.section_view == 'full_width' %}
		{% case section.settings.section_height %}
			{% when 'small' %}{%- assign img_size = '1920x880' -%}
			{% when 'medium' %}{%- assign img_size = '1920x600' -%}
			{% when 'large' %}{%- assign img_size = '1920x1230' -%}
		{% endcase %}
	{% else %}
		{% case section.settings.section_height %}
			{% when 'small' %}{%- assign img_size = '1170x503' -%}
			{% when 'medium' %}{%- assign img_size = '1170x628' -%}
			{% when 'large' %}{%- assign img_size = '1170x700' -%}
		{% endcase %}
	{% endif %}
{% else %}
	{% if section.settings.section_view == 'full_width' %}
		{% case section.settings.section_height %}
			{% when 'small' %}{%- assign img_size = '1920x500' -%}
			{% when 'medium' %}{%- assign img_size = '1920x600' -%}
			{% when 'large' %}{%- assign img_size = '1920x775' -%}
		{% endcase %}
	{% else %}
		{% case section.settings.section_height %}
			{% when 'small' %}{%- assign img_size = '1170x286' -%}
			{% when 'medium' %}{%- assign img_size = '1170x383' -%}
			{% when 'large' %}{%- assign img_size = '1170x457' -%}
		{% endcase %}
	{% endif %}
{% endif %}

{% if section.settings.section_view == 'boxed' %}
	<div class="container">
{% endif %}

<div class="section_wrap flexible_block__{{ section.settings.section_height }} {% if section.settings.parallax %}parallax_block{% endif %}">
	{% if section.settings.image.size > 0 %}
		<div class="img_placeholder__wrap img_placeholder__{{ section.settings.section_height }} {% if section.settings.parallax %}parallax_layer{% endif %}" style="background-image: url( {{ section.settings.image | img_url: img_size, crop: section.settings.img_alignment }} );"></div>
	{% else %}
		<div class="img_placeholder__wrap img_placeholder__{{ section.settings.section_height }} {% if section.settings.parallax %}parallax_layer{% endif %}">
			{{ 'image' | placeholder_svg_tag: 'img_placeholder' }}
		</div>
	{% endif %}
  
  	{% if section.settings.image_2.size > 0 %}
		<div class="img_placeholder__wrap img_placeholder__{{ section.settings.section_height }} {% if section.settings.parallax_2 %}parallax_layer_2{% endif %}" style="background-image: url( {{ section.settings.image_2 | img_url: img_size, crop: section.settings.img_alignment_2 }} );"></div>
	{% endif %}
	{% if section.settings.caption_bg_color_opacity > 0 %}
		{% assign bg_color_opacity = section.settings.caption_bg_color_opacity | plus: 0.05 %}
	{% endif %}

	<div class="section_txt align_{{ section.settings.caption_align }} {{ section.settings.section_view }}">
			<div class="container">
				<div class="caption_text {% if section.settings.inverted %}inverted{% endif %}"
					 {% if section.settings.caption_bg_color.size > 0 %}style="background-color: {{ section.settings.caption_bg_color | color_modify: 'alpha', bg_color_opacity }}"{% endif %}>
					{% for block in section.blocks %}
						{% if block.settings.title.size > 0 %}
							<h2 style="color:{{block.settings.h2_color}}">{{ block.settings.title}}</h2>
						{% endif %}

						{% if block.settings.subtitle.size > 0 %}
							<h4 style="color:{{block.settings.h4_color}}">{{ block.settings.subtitle | escape }}</h4>
						{% endif %}

						{% if block.settings.subsubtitle.size > 0 %}
							<h5>{{ block.settings.subsubtitle | escape }}</h5>
						{% endif %}

						{% if block.settings.text.size > 0 %}
							<p style="color:{{block.settings.p_color}}!important">{{ block.settings.text | strip_html }}</p>
						{% endif %}

						{% if block.settings.button_label.size > 0 and block.settings.button_link.size > 0 %}
							<a href="{{ block.settings.button_link }}" class="btn">
							<span>
								{{ block.settings.button_label }}
							<svg width="14" height="12" viewBox="0 0 14 12" fill="none"
								 xmlns="http://www.w3.org/2000/svg">
								<path d="M0.777344 6.77789V5.22233H10.1107L6.99957 2.11122L7.77734 0.555664L13.2218 6.00011L7.77734 11.4446L6.99957 9.889L10.1107 6.77789H0.777344Z"
									  fill="white"/>
							</svg>
							</span>

							</a>
						{% endif %}

						{% if block.settings.code.size > 0 %}
							<h3>{{ block.settings.code }}</h3>
						{% endif %}

					{% endfor %}
				</div>
			</div>
		</div>
		</div>

		{% if section.settings.section_view == 'boxed' %}
			</div>
		{% endif %}

	{% endif %}

{% schema %}
{
	"name": "Image with text overlay",
	"class": "section section_homepage section_image-with-text-overlay",
	"max_blocks": 6,
	"settings": [
		{
			"type": "checkbox",
			"id": "hide_section",
			"label": "Hide section",
			"default": false
		},
		{
			"type": "select",
			"id": "section_height",
			"label": "Section height",
			"default": "medium",
			"options": [
				{
					"label": "Small (2048x500)",
					"value": "small"
				},
				{
					"label": "Medium (2048x670)",
					"value": "medium"
				},
				{
					"label": "Large (2048x800)",
					"value": "large"
				}
			]
		},
		{
			"type": "select",
			"id": "section_view",
			"label": "Section view",
			"default": "boxed",
			"options": [
				{
					"label": "Boxed",
					"value": "boxed"
				},
				{
					"label": "Full width",
					"value": "full_width"
				}
			]
		},
		{
			"type": "image_picker",
			"id": "image",
			"label": "Image",
			"info": "The image should be more than 2048px wide to resize and crop properly"
		},
		{
			"type": "select",
			"id": "img_alignment",
			"label": "Image alignment",
			"info": "It only works if the parallax is disabled",
			"options": [
				{
					"value": "top",
					"label": "Top"
				},
				{
					"value": "center",
					"label": "Middle"
				},
				{
					"value": "bottom",
					"label": "Bottom"
				}
			]
		},
		{
			"type": "checkbox",
			"id": "parallax",
			"label": "Parallax",
			"default": false
		},




		{
			"type": "image_picker",
			"id": "image_2",
			"label": "Image 2",
			"info": "The image should be more than 2048px, with transparency in the PNG format"
		},
		{
			"type": "select",
			"id": "img_alignment_2",
			"label": "Image alignment",
			"info": "It only works if the parallax is disabled",
			"options": [
				{
					"value": "top",
					"label": "Top"
				},
				{
					"value": "center",
					"label": "Middle"
				},
				{
					"value": "bottom",
					"label": "Bottom"
				}
			]
		},
		{
			"type": "checkbox",
			"id": "parallax_2",
			"label": "Parallax 2",
			"default": false
		},
		{
			"type": "select",
			"id": "caption_align",
			"label": "Caption align",
			"default": "center",
			"options": [
				{
					"label": "Center",
					"value": "center"
				},
				{
					"label": "Right",
					"value": "right"
				},
				{
					"label": "Left",
					"value": "left"
				}
			]
		},
		{
			"type": "checkbox",
			"id": "inverted",
			"label": "Inverted",
			"default": false
		},
		{
			"type": "color",
			"id": "caption_bg_color",
			"label": "Caption background"
		},
		{
	        "type":      "range",
	        "id":        "caption_bg_color_opacity",
	        "min":       0,
	        "max":        1,
	        "step":       0.1,
	        "unit":       "px",
	        "label":     "Background opacity",
	        "default":   0.1
		}
	],
	"blocks": [

		// HEADER H2 //////////////////////////////////////////////////////////////////////////////////////////
		{
			"type": "header_h2",
			"name": "Header h2",
			"settings": [
				{
					"type": "richtext",
					"id": "title",
					"label": "Heading"
				},
				{
                    "type": "color",
                    "id": "h2_color",
                    "label": "H2 color"
                }
			]
		},

		// HEADER H4 //////////////////////////////////////////////////////////////////////////////////////////
		{
			"type": "header_h4",
			"name": "Header h4",
			"settings": [
				{
					"type": "text",
					"id": "subtitle",
					"label": "Sub heading",
					"default": "with text overlay"
				},
				{
                    "type": "color",
                    "id": "h4_color",
                    "label": "H4 color"
                }
			]
		},

		// HEADER H5 //////////////////////////////////////////////////////////////////////////////////////////
		{
			"type": "header_h5",
			"name": "Header h5",
			"settings": [
				{
					"type": "text",
					"id": "subsubtitle",
					"label": "Sub heading"
				}
			]
		},

		// TEXT  //////////////////////////////////////////////////////////////////////////////////////////////
		{
			"type": "text",
			"name": "Text",
			"settings": [
				{
					"type": "textarea",
					"id": "text",
					"label": "Text",
					"default": "Use overlay text to give your customers insight into your brand. Select imagery and text that relates to your style and story."
				},
				{
                    "type": "color",
                    "id": "p_color",
                    "label": "Paragraph color"
                }
			]
		},

		// BUTTON  //////////////////////////////////////////////////////////////////////////////////////////////
		{
			"type": "button",
			"name": "Button",
			"settings": [
				{
					"type": "text",
					"id": "button_label",
					"label": "Button label"
				},
				{
					"type": "url",
					"id": "button_link",
					"label": "Button link"
				}
			]
		},
		// CUSTOM HTML ////////////////////////////////////////////////////////////////////////////////////
		{
			"type": "html",
			"name": "Custom HTML",
			"settings": [
				{
					"type": "textarea",
					"id": "code",
					"label": "HTML"
				}
			]
		}
	],
	"presets": [
		{
			"name": "Image with text overlay",
			"category": "Image"
		}
	]
}
{% endschema %}

{% javascript %}
jQuery(function($){

	morkoParallax = function() {
		$('.parallax_block').each(function() {
			var parallaxBlock = $(this);
			var parallaxLayer = $(this).find('.parallax_layer');
			var parallaxLayer_2 = $(this).find('.parallax_layer_2');

			$(window).on('load scroll', function() {
				var parallaxHeight = parseInt( parallaxBlock.outerHeight() );
				var parallaxImgHeight = parseInt( parallaxLayer.outerHeight() );
				var parallaxImgHeight_2 = parseInt( parallaxLayer_2.outerHeight() );

				var parallaxOffset1 = parseInt( parallaxBlock.offset().top );
				var parallaxOffset2 = parseInt( parallaxOffset1 + parallaxHeight );

				var translateMax = parseInt( parallaxImgHeight - parallaxHeight ) - 2; // minus 2 to prevent floated numbers and borders between sections
				var translateMax_2 = parseInt( parallaxImgHeight_2 - parallaxHeight ) - 2; 

				var scrollTemp = $(window).scrollTop() + window.innerHeight;

				if ( ( scrollTemp >= parallaxOffset1 ) && ( $(window).scrollTop() <= parallaxOffset2 ) ) {
					// var translateKoff = parallaxHeight/parallaxImgHeight;

					// if ( translateKoff > 0.2 ) {
					// 	var translateVal = parseInt( ( scrollTemp - parallaxOffset1 ) * 0.2 );
					// }
					// else {
					// 	var translateVal = parseInt( ( scrollTemp - parallaxOffset1 ) * translateKoff );
					// };

					var translateVal = parseInt( ( scrollTemp - parallaxOffset1 ) * 0.3 );
					var translateVal_2 = parseInt( ( scrollTemp - parallaxOffset1 ) * 0.1 );

					if ( translateVal <= translateMax ) {
						parallaxLayer.css({ 'transform' : 'translate3d(0, -' + translateVal + 'px, 0)' });
                        parallaxLayer_2.css({ 'transform' : 'translate3d(0, -' + translateVal_2 + 'px, 0)' });
					}
					else if ( translateVal > translateMax ) {
						parallaxLayer.css({ 'transform' : 'translate3d(0, -' + translateMax + 'px, 0)' });
						
					};

				};

			});

		});

	};


	morkoParallax();


	$(document).on('shopify:section:load shopify:section:unload', '.section_image-with-text-overlay', function() {
		morkoParallax();
	});



	

});
{% endjavascript %}